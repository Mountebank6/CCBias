This file represents the structure of all the objects necessary to create
    a working TransientSurvey Object and take data from it


TransientSurvey:
    TransientGenerator:
        surveyShape:
            2-tuple. The pixel dimensions of the survey area
        generatorFunctions:
            List of functions. Each function returns a list of TransientEvent objects. Each server tick, each function in the list is run.
            Each function takes the following args:
                currentFrameNumber: current frame of the simulation
                surveyShape: the pixel dimensions of the survey
                survey: the survey object itself
            Each Returns:
                List of TransientEvent
                    Args for TransientEvent object:
                        birthloc: 5-list of
                            [birth time, birthxpos, birthypos, birthxvel, birthyvel]
                        lifetime: float or int
                            number of frames the event will survive
                        classID: an identifier for different kinds of events 
                            All events generated by a particular generatorFunction should share the same classID
                        noiseFunction: Function
                            Args:
                                lum: current luminosity of event
                                loc: event.loc variable
                                lifetime: event.lifetime
                            Returns:
                                noise: float 
                                    This function is re-run every frame and the returned value is added to the event`s luminosity for that frame
                        noiseExtraArgs: list
                            Extra args to be passed into noiseFunction after the first three described above
                        luminositySeries: list
                            A sequence of luminosity values that the event will loop through, frame by frame
        extraArgs:
            List of lists. The i`th entry in extraArgs is passed into the i`th entry of generatorFunctions after the first three args.
    ObservingProfile:
        viewingField:
            Function. Returns a list of events that are potentially observable because the "telescope" is pointed at them. This selection should be orthogonal to extraObservation
                Args: 
                    Time: the time in frames since the start of the survey
                    Events: the list of events that exist
        viewingFieldExtraArgs:
            list. Extra arguemnts to be passed into the function
        extraObstruction:
            Function. Returns a list of events that are potentially observable because they are not obstructed by anything. This selection should be orthogonal to viewingField
                Args: 
                    Time: the time in frames since the start of the survey
                    Events: the list of events that exist
        extraObservationExtraArgs:
            list. Extra arguemnts to be passed into the function
        holisticDetection:
            Function. Takes in a single event (generally dead ones, but not necessarily) and detirmines if they are "detected" If they are, returns True
                Args:
                    Event:
                        event to be tested
                Returns: True if detected, False if not detected
        holisticDetectionExtraArgs:
            list. Extra arguemnts to be passed into the function
        surveyNoiseFunction:
            Function that generates noise on the events to simulate ambient sky noise
                Args:
                    Event:
                        event to be tested
                Returns: noise to be added to lum
        surveyNoiseFunctionExtraArgs:
            list. Extra arguemnts to be passed into the function
        vFieldChar, eObstructChar, hDetectChar, sNoiseChar:
            Ranges of legal values for the associated extraArgs. each is a list of 3-tuples with lengthsequal to the lengths of their corresponding extraArgs. The tuples tell the range of values over which to optimize and the datatype. Of the form:
            (low, high, "float") or (low, high, "int"). The ranges are inclusive on low, and exclusive on high. If the type given is "int", the optimizer will only search within integers between low and high.
        measurementFunction:
            Function. Produces information true and observed event
                properties.
            Args:
                List of all events created
            Returns:
                2-tuple of lists of 2-tuples.
            
            The top-level 2-tuple is of the form (true, observed).
                true: list of 2-tuples representing data about the true event distribution.
                observed is a list of 2-tuples representing data about the observed event distribution

            Each 2-tuple inside the lists 'true' and 'observed' is of the form (list, string). The list is data of the events and the string is the name of the parameter measured in the data (e.g. "lifetime")
            
            Example: If there were 3 events generated in total, but only 1 was detected, and we were interested in event lifetime, measurementFunction would return something like:
                    ([([45,23,8],"lifetime")],[([23],"lifetime")])
            Where the event with lifetime 23 was the only event to be detected